# +---------------------------------------------------+
# Function to set the new hostname
# +---------------------------------------------------+
function func_sethostname() {
  func_echo-header

  # Check if the hostname is valid
  hncheck=1
  while [ $hncheck != 0 ]
   do
     if [[ $HOSTNAME =~ ^[-a-zA-Z0-9]{2,256}+$ ]]
      then
        hncheck=0
      else
        echo -e "       $red ERROR: The hostname $HOSTNAME seems to be invalid"
        echo -e "        ERROR: please re-enter the hostname$clean"
        echo -e "$green[eFa]$clean What is the hostname of this machine: $cyan(single Word)$clean"
        echo -e -n "$green[eFa]$clean : "
        read HOSTNAME
     fi
    done

  # Check if the Domain name is valid  
  dncheck=1
  while [ $dncheck != 0 ]
   do
     if [[ $DOMAINNAME =~ ^[a-zA-Z0-9]+([\-\.]{1}[a-zA-Z0-9]+)*\.[a-z]{2,15}$ ]]
      then
        dncheck=0
      else
        echo -e "       $red ERROR: The domain $DOMAINNAME seems to be invalid"
        echo -e "        ERROR: please re-enter the domain$clean"
        echo -e "$green[eFa]$clean Please enter the domain name for this machine"
        echo -e -n "$green[eFa]$clean : "
        read DOMAINNAME
     fi
    done

  echo -e ""
  echo -e "$red Changing your hostname will reboot your server. $clean"
  echo -e ""
  echo -e "Are you sure you want to change the hostname of this machine"
  echo -e -n "$green[eFa]$clean to $HOSTNAME.$DOMAINNAME? (y/N): "
  local TMPYN
  read TMPYN
  if [[ $TMPYN == "y" || $TMPYN == "Y" ]]; then
    # Grab old hostname for later
    OLDHOSTNAME=$(grep "^HOSTNAME" /etc/eFa/eFa-Config | sed 's/^.*://')
    OLDDOMAINNAME=$(grep "^DOMAINNAME" /etc/eFa/eFa-Config | sed 's/^.*://')

# Backup up hosts file
[[ -f /etc/hosts.bak ]] && rm -f /etc/hosts.bak
cp -f /etc/hosts /etc/hosts.bak

# Write new hosts file
  echo "127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4" > /etc/hosts
  echo "::1         localhost localhost.localdomain localhost6 localhost6.localdomain6" >> /etc/hosts
  if [[ -n $IP4 ]]; then
    echo "$IP4    $HOSTNAME.$DOMAINNAME   $HOSTNAME" >> /etc/hosts
  fi
  if [[ -n $IP6 ]]; then
    echo "$IP6    $HOSTNAME.$DOMAINNAME   $HOSTNAME" >> /etc/hosts
  fi

    echo "$HOSTNAME.$DOMAINNAME" > /etc/hostname

    sed -i "/^Hostname =/ c\Hostname = $HOSTNAME.$DOMAINNAME" /etc/MailScanner/MailScanner.conf

    # Set the hostname for the active system
    hostname $HOSTNAME.$DOMAINNAME

    # Write change to eFa-Config
    sed -i "/^HOSTNAME:/ c\HOSTNAME:$HOSTNAME" /etc/eFa/eFa-Config
    sed -i "/^DOMAINNAME:/ c\DOMAINNAME:$DOMAINNAME" /etc/eFa/eFa-Config

    # Change mailscanner config
    sed -i "/^define('MAILWATCH_FROM_ADDR',/ c\define('MAILWATCH_FROM_ADDR', 'no-reply@$HOSTNAME.$DOMAINNAME');" /var/www/html/mailscanner/conf.php

    # Issue 195 -- Update MySQL database hostname fields
    MAILWATCHPWD=$(grep "^MAILWATCHSQLPWD" /etc/eFa/MailWatch-Config | sed 's/^.*://')

    systemctl stop msmilter
    systemctl stop mailscanner

    mysql -u mailwatch --password=$MAILWATCHPWD mailscanner -e "\
    LOCK TABLES maillog WRITE; \
    ALTER TABLE maillog MODIFY COLUMN \`timestamp\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP; \
    UPDATE maillog SET hostname='$HOSTNAME.$DOMAINNAME' WHERE hostname='$OLDHOSTNAME.$OLDDOMAINNAME'; \
    ALTER TABLE maillog MODIFY COLUMN \`timestamp\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP; \
    LOCK TABLES mtalog WRITE; \
    UPDATE mtalog SET host='$HOSTNAME' WHERE host='$OLDHOSTNAME'; \
    UNLOCK TABLES;"

    postconf -e "error_notice_recipient = root@\$myhostname"

    sed -i "/^ServerName\s/ c\ServerName $HOSTNAME.$DOMAINNAME:80" /etc/httpd/conf/httpd.conf
    sed -i "/^ServerName\s/ c\ServerName $HOSTNAME.$DOMAINNAME:443" /etc/httpd/conf.d/ssl.conf
    sed -i "/^ServerName\s/ c\ServerName $HOSTNAME.$DOMAINNAME:80" /etc/httpd/conf.d/vhost.conf

    # Issue #155 Change domainname in opendmarc reports
    DBHOST='localhost'
    DBUSER='opendmarc'
    DBPASS="`grep ^DMARCSQLPWD /etc/eFa/openDMARC-Config | sed 's/^.*://'`"
    DBNAME='opendmarc'
    DMARCRepDomain="`grep DOMAINNAME /etc/eFa/eFa-Config | sed 's/^.*://'`"
    DMARCRepEmail="no-reply@$DMARCRepDomain"
    /usr/sbin/opendmarc-reports -dbhost=${DBHOST} -dbuser=${DBUSER} -dbpasswd=${DBPASS} -dbname=${DBNAME} -interval=86400 -report-email $DMARCRepEmail -report-org $DMARCRepDomain -smtp-server=127.0.0.1

    echo -e ""
    echo -e "Hostname changed.  Note that you may need to generate new SSL certificates to match the new hostname"
    echo -e ""
    echo -e "$red [eFa] Your system will now reboot. $clean"
    pause
    reboot

  elif [[ $TMPSECURE == "n" || $TMPSECURE == "N" || $TMPSECURE="" ]]; then
    echo -e "No changes made"
    pause
    ipmenu=1
  fi
}
