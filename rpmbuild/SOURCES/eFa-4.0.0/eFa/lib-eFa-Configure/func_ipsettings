# +---------------------------------------------------+
# Option IP_SETTINGS
# +---------------------------------------------------+
func_ip-settings(){
  menu=0
  ipmenu=1
  while [ $ipmenu == "1" ]
    do
      func_getipsettings
      func_echo-header
      echo -e "Current IP settings for $INTERFACE are:"
      echo -e " 1) BOOTPROTO            :  $BOOTPROTO"
      echo -e " 2) IPV6_AUTOCONF        :  $IPV6AUTOCONF"
      echo -e " 3) IP                   :  $IP4"
      echo -e " 4) Netmask              :  $NM4"
      echo -e " 5) Gateway              :  $GW4"
      echo -e " 6) Use IPv6 DNS         :  $IPV6DNS"
      echo -e " 7) IPv6 IP              :  $IP6"
      echo -e " 8) IPv6 Prefix          :  $PF6"
      echo -e " 9) IPv6 Gateway         :  $GW6"
      echo -e "10) DNS Recursion        :  $RECURSIVEDNS"
      echo -e "11) Primary DNS          :  $DNS1"
      echo -e "12) Secondary DNS        :  $DNS2"
      echo -e "13) Hostname             :  $HOSTNAME"
      echo -e "14) Domain Name          :  $DOMAINNAME"
      echo -e ""
      echo -e "e) Return to main menu"
      echo -e ""
      echo -e "$red Note: Network will reset when changing values.$clean"
      echo -e ""
      echo -e "Enter setting you want to change"
      echo -e -n "$green[eFa]$clean : "
      local choice
      read choice
      case $choice in
                1)  ipmenu=0
                    echo ""
                    read -p "Do you want to use DHCP? (y/N): " ASKPROTO
                    if [[ -z $ASKPROTO || $ASKPROTO =~ ^[nN]$ ]]; then
                       BOOTPROTO="none"
                       func_setipsettings
                       menu=1
                    elif [[ $ASKPROTO =~ ^[yY]$ ]]; then
                       BOOTPROTO="dhcp"
                       func_setipsettings
                       menu=1
                    else
                      echo "ERROR invalid choice" && pause && menu=1
                    fi
                    ;;
                2)  ipmenu=0
                    echo ""
                    read -p "Do you want to use IPV6 Auto Configuration? (y/N): " ASKAUTO
                    if [[ -z $ASKAUTO || $ASKAUTO =~ ^[nN]$ ]]; then
                       IPV6AUTOCONF="no"
                       func_setipsettings
                       menu=1
                    elif [[ $ASKAUTO =~ ^[yY]$ ]]; then
                       IPV6AUTOCONF="yes"
                       func_setipsettings
                       menu=1
                    else
                      echo "ERROR invalid choice" && pause && menu=1
                    fi
                    ;;
                3)  ipmenu=0
                    echo ""
                    read -p "Enter your new IP: " IP4
                    checkip4 $IP4
                    if [[ -n "$IP4" && $? -eq 1 ]]; then echo "ERROR invalid ip address" && pause && menu=1; else
                      func_setipsettings
                      menu=1
                    fi
                    ;;
                4)  ipmenu=0
                    echo ""
                    read -p "Enter your new netmask: " NM4
                    checkip4 $NM4
                    if [[ -n "$NM4" && $? -eq 1 ]]; then echo "ERROR invalid netmask" && pause && menu=1; else
                      func_setipsettings
                      menu=1
                    fi
                    ;;
                5)  ipmenu=0
                    echo ""
                    read -p "Enter your new gateway: " GW4
                    checkip4 $GW4
                    if [[ -n "$GW4" && $? -eq 1 ]]; then echo "ERROR empty value" && pause && menu=1; else
                      func_setipsettings
                      menu=1
                    fi
                    ;;
                6)  ipmenu=0
                    read -p "use IPv6 dns? (Y/n): " ASKIPV6DNS
                    if [[ -z $ASKIPV6DNS || $ASKIPV6DNS =~ ^[yY]$ ]]; then
                       IPV6DNS="yes"
                       func_setipsettings
                       menu=1
                    elif [[ $ASKIPV6DNS =~ ^[nN]$ ]]; then
                       IPV6DNS="no"
                       func_setipsettings
                       menu=1
                    else
                      echo "ERROR invalid choice" && pause && menu=1
                    fi
                    ;;
                7)  ipmenu=0
                    echo ""
                    read -p "Enter your new IPv6 IP: " IP6
                    checkip6 $IP6
                    if [[ -n "$IP6" && $? -eq 1 ]]; then echo "ERROR invalid ip address" && pause && menu=1; else
                      func_setipsettings
                      menu=1
                    fi
                    ;;
                8)  ipmenu=0
                    echo ""
                    read -p "Enter your new IPv6 Prefix: " PF6
                    if [[ -n "$PF6" && !($PF6 =~ ^[0-9]{1,3}$ && $PF6 -ge 1 && $PF6 -le 128 && $(( $PF6 & ($PF6 - 1) )) -eq 0) ]]; then echo "ERROR invalid ipv6 prefix" && pause && menu=1; else
                      func_setipsettings
                      menu=1
                    fi
                    ;;
                9)  ipmenu=0
                    echo ""
                    read -p "Enter your new IPv6 Gateway: " GW6
                    checkip6 $GW6
                    if [[ -n "$GW6" && $? -eq 1 ]]; then echo "ERROR invalid gateway address" && pause && menu=1; else
                      func_setipsettings
                      menu=1
                    fi
                    ;;
               10)  ipmenu=0
                    func_ask-recursion
                    menu=1
                    ;;
               11)  ipmenu=0
                    echo ""
                    if [ "$RECURSIVEDNS" == "ENABLED" ]; then 
                      echo "ERROR: DNS Recursion is enabled.  Disable recursion to set DNS"
                      pause && menu=1
                    else
                      read -p "Enter your new primary DNS: " DNS1
                      if [ -z "$DNS1" ]; then echo "ERROR empty value" && pause && menu=1; else
                        func_setipsettings
                        menu=1
                      fi
                    fi
                    ;;
               12)  ipmenu=0
                    echo ""
                    if [ "$RECURSIVEDNS" == "ENABLED" ]; then 
                      echo "ERROR: DNS Recursion is enabled.  Disable recursion to set DNS"
                      pause && menu=1
                    else
                      read -p "Enter your new secondary DNS: " DNS2
                      if [ -z "$DNS2" ]; then echo "ERROR empty value" && pause && menu=1; else
                        func_setipsettings
                        menu=1
                      fi
                    fi
                    ;;
                13) ipmenu=0
                    echo ""
                    read -p "Enter your new HOSTNAME: " HOSTNAME
                    if [ -z "$HOSTNAME" ]; then echo "ERROR empty value" && pause && menu=1; else
                      func_sethostname
                      menu=1
                    fi
                    ;;
                14) ipmenu=0
                    echo ""
                    read -p "Enter your new DOMAIN NAME: " DOMAINNAME
                    if [ -z "$DOMAINNAME" ]; then echo "ERROR empty value" && pause && menu=1; else
                      func_sethostname
                      menu=1
                    fi
                    ;;
                e) menu=1 && return ;;
                *) echo -e "Error \"$choice\" is not an option..." && pause
            esac
        done
}
# +---------------------------------------------------+
